{"version":3,"sources":["../src/SystemHotReloader.js"],"names":["SystemHotReloader","options","opts","loader","SystemJS","System","logLevel","undefined","logger","createLogger","Error","prefix","debug","message","console","info","error","warn","path","name1","normalizeSync","get","name2","name3","Object","keys","_loader","modules","find","name","startsWith","resolvePath","reloadModule","Promise","resolve","baseURL","substr","length","replace","moduleName","startTime","window","performance","now","cleanName","moduleChain","getReloadChain","moduleBackups","then","forEach","getModuleBackup","promise","reloadModuleInstance","exports","__reload","push","__unload","suffix","join","time","timeSecRound","Math","floor","catch","realError","originalErr","stack","backup","unload","reload","fixModuleDeps","restoreModuleBackup","deleteModule","importModule","moduleRecords","moduleRecord","dependencies","depModuleRecord","index","newDepModuleRecord","setters","impRecord","importers","record","import","impModuleRecord","delete","data","set","cache","distance","reduce","result","impDistance","getModuleDistanceToRoot","min","records","farNode","map","item","meta","nextModules","slice","splice","indexOf","nextResult","concat"],"mappings":"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","file":"SystemHotReloader.js","sourcesContent":["import 'core-js/shim';\n\nexport default class SystemHotReloader {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @prop  {Object} loader   SystemJS instance, default to SystemJS || System\n   * @prop  {Number} logLevel 0 - none, 1 - error, 2 - info (default), 3 - debug\n   */\n  constructor(options) {\n    const opts = options || {};\n\n    this.loader = opts.loader || SystemJS || System;\n    this.logLevel = opts.loader === undefined ? 2 : opts.logLevel;\n\n    this.logger = this.createLogger('HMR');\n\n    if (!this.loader) {\n      throw new Error('Unable to instantiate SystemJS Hot Reloader without SystemJS');\n    }\n  }\n\n  /**\n   * Create logger.\n   */\n  createLogger(prefix) {\n    return {\n      debug: (message) => {\n        if (this.logLevel >= 3 && console && console.debug) {\n          console.debug(`[${prefix}] ${message}`);\n        }\n      },\n      info: (message) => {\n        if (this.logLevel >= 2 && console && console.info) {\n          console.info(`[${prefix}] ${message}`);\n        }\n      },\n      error: (message) => {\n        if (this.logLevel >= 1 && console && console.warn) {\n          console.warn(`[${prefix}] ${message}`);\n        }\n      },\n    };\n  }\n\n  /**\n   * Resolve module file path to module name.\n   */\n  resolvePath(path) {\n    // try obvious resolve filename.ext => filename.ext\n    const name1 = this.loader.normalizeSync(path);\n    if (this.loader.get(name1)) {\n      return name1;\n    }\n\n    // try less obvious resolve filename.ext => filename.ext!\n    const name2 = this.loader.normalizeSync(`${path}!`);\n    if (this.loader.get(name2)) {\n      return name2;\n    }\n\n    // try to find by filename path in all registered modules, slow :-(\n    const name3 = Object.keys(this.loader._loader.modules).find((name) => {\n      return name.startsWith(`${name1}!`);\n    });\n    if (name3) {\n      return name3;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Reload module by file path.\n   */\n  reloadPath(path) {\n    this.logger.debug(`Reloading file: ${path}`);\n\n    const name = this.resolvePath(path);\n\n    if (name) {\n      return this.reloadModule(name);\n    }\n\n    // we did not find module :-(\n    this.logger.info('Nothing to update');\n    return Promise.resolve();\n  }\n\n  /**\n   * Clean full module name from useless base url prefix and loader related suffix.\n   */\n  cleanName(name) {\n    // remove base url prefix\n    if (name.startsWith(this.loader.baseURL)) {\n      name = `./${name.substr(this.loader.baseURL.length)}`;\n    }\n\n    // remove loader related garbage\n    return name.replace(/!.*$/, '');\n  }\n\n  /**\n   * Reload module by full module name.\n   */\n  reloadModule(moduleName) {\n    const startTime = window.performance.now();\n\n    this.logger.info(`Reloading module ${this.cleanName(moduleName)}`);\n\n    if (!this.loader.get(moduleName)) {\n      this.logger.info('Nothing to update');\n      return Promise.resolve();\n    }\n\n    const moduleChain = this.getReloadChain([moduleName]);\n    const moduleBackups = {};\n\n    return Promise.resolve()\n      .then(() => {\n        this.logger.debug('Reload chain:');\n        moduleChain.forEach((name) => {\n          this.logger.debug(` - ${this.cleanName(name)}`);\n        });\n      })\n      .then(() => {\n        this.logger.debug('Saving backup');\n        moduleChain.forEach((name) => {\n          moduleBackups[name] = this.getModuleBackup(name);\n        });\n      })\n      .then(() => {\n        let promise = Promise.resolve();\n        moduleChain.forEach((name) => {\n          promise = promise.then(() => this.reloadModuleInstance(name, moduleChain));\n        });\n        return promise;\n      })\n      .then(() => {\n        if (moduleChain.length) {\n          this.logger.info('Updated modules:');\n          moduleChain.forEach((name) => {\n            const exports = this.loader.get(name);\n            const options = [];\n            if (exports && exports.__reload) {\n              options.push('__reload()');\n            } else if (exports && exports.__unload) {\n              options.push('__unload()');\n            }\n            const suffix = options.length ? `{ ${options.join(', ')} }` : '';\n            this.logger.info(` - ${this.cleanName(name)} ${suffix}`);\n          });\n        } else {\n          this.logger.info('Nothing to update');\n        }\n\n        const time = (window.performance.now() - startTime) / 1000;\n        const timeSecRound = Math.floor(time * 100) / 100;\n        this.logger.info(`Reload took ${timeSecRound} sec`);\n      })\n      .catch((error) => {\n        if (error) {\n          const realError = error.originalErr || error;\n          this.logger.error(realError.stack || realError);\n        }\n\n        this.logger.error('An error occured during reloading. Reverting...');\n\n        let promise = Promise.resolve();\n\n        moduleChain.forEach((name) => {\n          promise = promise.then(() => {\n            return this.reloadModuleInstance(name, moduleChain, moduleBackups[name]);\n          });\n        });\n\n        promise = promise.then(() => {\n          this.logger.info('Application state was restored');\n        });\n\n        return promise;\n      })\n      .catch((error) => {\n        if (error) {\n          this.logger.error(error.stack || error);\n        }\n        this.logger.error('An unrecoverable error occured during reverting');\n      });\n  }\n\n  /**\n   * Reload module instance with option to reload from backup.\n   */\n  reloadModuleInstance(name, moduleChain, backup) {\n    const exports = backup ? backup.exports : this.loader.get(name);\n\n    const unload = exports ? exports.__unload : undefined;\n    const reload = exports ? exports.__reload : undefined;\n\n    if (reload) {\n      return Promise.resolve()\n        .then(() => this.fixModuleDeps(name))\n        .then(() => reload(moduleChain));\n    }\n\n    return Promise.resolve()\n      .then(() => (unload ? unload(moduleChain) : undefined))\n      .then(() => (backup ? this.restoreModuleBackup(backup) : this.deleteModule(name)))\n      .then(() => this.importModule(name));\n  }\n\n  /**\n   * Fix module dependencies before hooked reload.\n   */\n  fixModuleDeps(name) {\n    const moduleRecords = this.loader._loader.moduleRecords;\n\n    const moduleRecord = moduleRecords[name];\n\n    moduleRecord.dependencies\n      .forEach((depModuleRecord, index) => {\n        if (!depModuleRecord) {\n          return;\n        }\n\n        const newDepModuleRecord = moduleRecords[depModuleRecord.name];\n\n        if (!newDepModuleRecord) {\n          return;\n        }\n\n        if (newDepModuleRecord !== depModuleRecord) {\n          this.logger.debug(`Fixing dependency ${this.cleanName(depModuleRecord.name)} for module ${this.cleanName(moduleRecord.name)}`);\n\n          moduleRecord.setters[index](newDepModuleRecord.exports);\n\n          if (moduleRecord.dependencies[index] !== newDepModuleRecord.exports) {\n            moduleRecord.dependencies[index] = newDepModuleRecord;\n          }\n\n          const impRecord = newDepModuleRecord.importers\n            .find(record => record && record.name === moduleRecord);\n          if (!impRecord) {\n            newDepModuleRecord.importers.push(moduleRecord);\n          }\n        }\n      });\n  }\n\n  /**\n   * Import module.\n   */\n  importModule(name) {\n    this.logger.debug(`Importing module ${this.cleanName(name)}`);\n    return this.loader.import(name);\n  }\n\n  /**\n   * Delete module and fix importers for dependencies.\n   */\n  deleteModule(name) {\n    const moduleRecord = this.loader._loader.moduleRecords[name];\n\n    if (moduleRecord) {\n      moduleRecord.dependencies\n        .forEach((depModuleRecord) => {\n          if (!depModuleRecord) {\n            return;\n          }\n          depModuleRecord.importers\n            .forEach((impModuleRecord, index) => {\n              if (impModuleRecord && moduleRecord.name === impModuleRecord.name) {\n                this.logger.debug(`Removing importer ${this.cleanName(impModuleRecord.name)} from module ${this.cleanName(depModuleRecord.name)}`);\n                depModuleRecord.importers[index] = null;\n              }\n            });\n        });\n    }\n\n    this.logger.debug(`Removing module ${this.cleanName(name)}`);\n    this.loader.delete(name);\n  }\n\n  /**\n   * Get module backup which could be used to restore module state.\n   */\n  getModuleBackup(name) {\n    const exports = this.loader.get(name);\n    const record = this.loader._loader.moduleRecords[name];\n    return { name, record, exports };\n  }\n\n  /**\n   * Restore module from backup.\n   */\n  restoreModuleBackup(data) {\n    this.loader.set(data.name, data.exports);\n    this.loader._loader.moduleRecords[data.name] = data.record;\n  }\n\n  /**\n   * Get shortest distance to the root module (root modules have no importers).\n   */\n  getModuleDistanceToRoot(name, record, cache) {\n    let distance;\n    if (cache[name] !== undefined) {\n      return cache[name];\n    }\n    if (!record || !record.importers.length) {\n      distance = 0;\n    } else {\n      distance = record.importers.reduce((result, impRecord) => {\n        const impDistance = 1 + this.getModuleDistanceToRoot(impRecord.name, impRecord, cache);\n        return result === null ? impDistance : Math.min(result, impDistance);\n      }, null);\n    }\n    cache[name] = distance;\n    return distance;\n  }\n\n  /**\n   * Reduce dependency tree and return modules in the order they should be reloaded.\n   */\n  getReloadChain(modules, cache) {\n    if (modules.length === 0) {\n      return modules;\n    }\n\n    const records = this.loader._loader.moduleRecords;\n\n    if (!cache) {\n      cache = {};\n    }\n\n    const farNode = modules.reduce((result, name, index) => {\n      const record = records[name] ? records[name] : undefined;\n      const distance = this.getModuleDistanceToRoot(name, record, cache);\n      const importers = !record ? [] : record.importers.map(item => item.name);\n      const reload = record && record.exports && record.exports.__reload;\n      const meta = { distance, index, name, importers, reload };\n      if (result === undefined) {\n        return meta;\n      }\n      return result.distance >= distance ? result : meta;\n    }, undefined);\n\n    const nextModules = modules.slice(0);\n    nextModules.splice(farNode.index, 1);\n    if (!farNode.reload) {\n      farNode.importers.forEach((name) => {\n        if (nextModules.indexOf(name) === -1) {\n          nextModules.push(name);\n        }\n      });\n    }\n\n    const nextResult = this.getReloadChain(nextModules, cache);\n\n    const result = [farNode.name].concat(nextResult);\n\n    return result;\n  }\n}\n"]}