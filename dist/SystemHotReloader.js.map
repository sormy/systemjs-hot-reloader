{"version":3,"sources":["../src/SystemHotReloader.js"],"names":["SystemHotReloader","options","opts","loader","SystemJS","System","Error","hotReloaderOptions","Object","assign","logLevel","undefined","logger","createLogger","trace","info","prefix","debug","message","console","error","warn","path","name1","normalizeSync","get","name2","name3","keys","_loader","modules","find","name","startsWith","resolvePath","reloadModule","Promise","resolve","baseURL","substr","length","replace","moduleName","startTime","window","performance","now","cleanName","moduleChain","getReloadChain","moduleBackups","then","forEach","getModuleBackup","promise","reloadModuleInstance","exports","__reload","push","__unload","suffix","join","time","timeSecRound","Math","floor","catch","realError","originalErr","stack","backup","unload","reload","oldDeps","fixModuleDeps","getModuleDepNames","restoreModuleBackup","deleteModule","importModule","newDeps","deleteOldDeps","depDiff","filter","indexOf","depName","load","loads","deps","map","address","depMap","moduleRecord","moduleRecords","dependencies","record","depModuleRecord","index","newDepModuleRecord","setters","impRecord","importers","import","impModuleRecord","splice","delete","clearModuleResources","getModuleAddress","Array","from","document","querySelectorAll","node","remove","href","data","set","cache","distance","reduce","result","impDistance","getModuleDistanceToRoot","min","records","farNode","item","meta","nextModules","slice","nextResult","concat"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,iB;AACnB;;;;;;;AAOA,6BAAYC,OAAZ,EAAqB;AAAA;;AACnB,QAAMC,OAAOD,WAAW,EAAxB;;AAEA,SAAKE,MAAL,GAAcD,KAAKC,MAAL,IAAeC,QAAf,IAA2BC,MAAzC;;AAEA,QAAI,CAAC,KAAKF,MAAV,EAAkB;AAChB,YAAM,IAAIG,KAAJ,CAAU,8DAAV,CAAN;AACD;;AAED,QAAI,KAAKH,MAAL,CAAYI,kBAAhB,EAAoC;AAClCC,aAAOC,MAAP,CAAcP,IAAd,EAAoB,KAAKC,MAAL,CAAYI,kBAAhC;AACD;;AAED,SAAKG,QAAL,GAAgBR,KAAKQ,QAAL,KAAkBC,SAAlB,GAA8B,CAA9B,GAAkCT,KAAKQ,QAAvD;;AAEA,SAAKE,MAAL,GAAc,KAAKC,YAAL,CAAkB,KAAlB,CAAd;;AAEA,QAAI,CAAC,KAAKV,MAAL,CAAYW,KAAjB,EAAwB;AACtB,WAAKF,MAAL,CAAYG,IAAZ,CAAiB,wEAAjB;AACD;AACF;;AAED;;;;;;;iCAGaC,M,EAAQ;AAAA;;AACnB,aAAO;AACLC,eAAO,eAACC,OAAD,EAAa;AAClB,cAAI,MAAKR,QAAL,IAAiB,CAAjB,IAAsBS,OAAtB,IAAiCA,QAAQF,KAA7C,EAAoD;AAClDE,oBAAQF,KAAR,OAAkBD,MAAlB,UAA6BE,OAA7B;AACD;AACF,SALI;AAMLH,cAAM,cAACG,OAAD,EAAa;AACjB,cAAI,MAAKR,QAAL,IAAiB,CAAjB,IAAsBS,OAAtB,IAAiCA,QAAQJ,IAA7C,EAAmD;AACjDI,oBAAQJ,IAAR,OAAiBC,MAAjB,UAA4BE,OAA5B;AACD;AACF,SAVI;AAWLE,eAAO,eAACF,OAAD,EAAa;AAClB,cAAI,MAAKR,QAAL,IAAiB,CAAjB,IAAsBS,OAAtB,IAAiCA,QAAQE,IAA7C,EAAmD;AACjDF,oBAAQE,IAAR,OAAiBL,MAAjB,UAA4BE,OAA5B;AACD;AACF;AAfI,OAAP;AAiBD;;AAED;;;;;;gCAGYI,I,EAAM;AAChB;AACA,UAAMC,QAAQ,KAAKpB,MAAL,CAAYqB,aAAZ,CAA0BF,IAA1B,CAAd;AACA,UAAI,KAAKnB,MAAL,CAAYsB,GAAZ,CAAgBF,KAAhB,CAAJ,EAA4B;AAC1B,eAAOA,KAAP;AACD;;AAED;AACA,UAAMG,QAAQ,KAAKvB,MAAL,CAAYqB,aAAZ,CAA6BF,IAA7B,OAAd;AACA,UAAI,KAAKnB,MAAL,CAAYsB,GAAZ,CAAgBC,KAAhB,CAAJ,EAA4B;AAC1B,eAAOA,KAAP;AACD;;AAED;AACA,UAAMC,QAAQnB,OAAOoB,IAAP,CAAY,KAAKzB,MAAL,CAAY0B,OAAZ,CAAoBC,OAAhC,EAAyCC,IAAzC,CAA8C,UAACC,IAAD,EAAU;AACpE,eAAOA,KAAKC,UAAL,CAAmBV,KAAnB,OAAP;AACD,OAFa,CAAd;AAGA,UAAII,KAAJ,EAAW;AACT,eAAOA,KAAP;AACD;;AAED,aAAOhB,SAAP;AACD;;AAED;;;;;;+BAGWW,I,EAAM;AACf,WAAKV,MAAL,CAAYK,KAAZ,sBAAqCK,IAArC;;AAEA,UAAMU,OAAO,KAAKE,WAAL,CAAiBZ,IAAjB,CAAb;;AAEA,UAAIU,IAAJ,EAAU;AACR,eAAO,KAAKG,YAAL,CAAkBH,IAAlB,CAAP;AACD;;AAED;AACA,WAAKpB,MAAL,CAAYG,IAAZ,CAAiB,mBAAjB;;AAEA,aAAOqB,QAAQC,OAAR,EAAP;AACD;;AAED;;;;;;8BAGUL,I,EAAM;AACd;AACA,UAAIA,KAAKC,UAAL,CAAgB,KAAK9B,MAAL,CAAYmC,OAA5B,CAAJ,EAA0C;AACxCN,sBAAYA,KAAKO,MAAL,CAAY,KAAKpC,MAAL,CAAYmC,OAAZ,CAAoBE,MAAhC,CAAZ;AACD;;AAED;AACA,aAAOR,KAAKS,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAP;AACD;;AAED;;;;;;iCAGaC,U,EAAY;AAAA;;AACvB,UAAMC,YAAYC,OAAOC,WAAP,CAAmBC,GAAnB,EAAlB;;AAEA,WAAKlC,MAAL,CAAYG,IAAZ,uBAAqC,KAAKgC,SAAL,CAAeL,UAAf,CAArC;;AAEA,UAAI,CAAC,KAAKvC,MAAL,CAAYsB,GAAZ,CAAgBiB,UAAhB,CAAL,EAAkC;AAChC,aAAK9B,MAAL,CAAYG,IAAZ,CAAiB,mBAAjB;AACA,eAAOqB,QAAQC,OAAR,EAAP;AACD;;AAED,UAAMW,cAAc,KAAKC,cAAL,CAAoB,CAACP,UAAD,CAApB,CAApB;AACA,UAAMQ,gBAAgB,EAAtB;;AAEA,aAAOd,QAAQC,OAAR,GACJc,IADI,CACC,YAAM;AACV,eAAKvC,MAAL,CAAYK,KAAZ,CAAkB,eAAlB;AACA+B,oBAAYI,OAAZ,CAAoB,UAACpB,IAAD,EAAU;AAC5B,iBAAKpB,MAAL,CAAYK,KAAZ,SAAwB,OAAK8B,SAAL,CAAef,IAAf,CAAxB;AACD,SAFD;AAGD,OANI,EAOJmB,IAPI,CAOC,YAAM;AACV,eAAKvC,MAAL,CAAYK,KAAZ,CAAkB,eAAlB;AACA+B,oBAAYI,OAAZ,CAAoB,UAACpB,IAAD,EAAU;AAC5BkB,wBAAclB,IAAd,IAAsB,OAAKqB,eAAL,CAAqBrB,IAArB,CAAtB;AACD,SAFD;AAGD,OAZI,EAaJmB,IAbI,CAaC,YAAM;AACV,YAAIG,UAAUlB,QAAQC,OAAR,EAAd;AACAW,oBAAYI,OAAZ,CAAoB,UAACpB,IAAD,EAAU;AAC5BsB,oBAAUA,QAAQH,IAAR,CAAa;AAAA,mBAAM,OAAKI,oBAAL,CAA0BvB,IAA1B,EAAgCgB,WAAhC,CAAN;AAAA,WAAb,CAAV;AACD,SAFD;AAGA,eAAOM,OAAP;AACD,OAnBI,EAoBJH,IApBI,CAoBC,YAAM;AACV,YAAIH,YAAYR,MAAhB,EAAwB;AACtB,iBAAK5B,MAAL,CAAYG,IAAZ,CAAiB,kBAAjB;AACAiC,sBAAYI,OAAZ,CAAoB,UAACpB,IAAD,EAAU;AAC5B,gBAAMwB,UAAU,OAAKrD,MAAL,CAAYsB,GAAZ,CAAgBO,IAAhB,CAAhB;AACA,gBAAM/B,UAAU,EAAhB;AACA,gBAAIuD,WAAWA,QAAQC,QAAvB,EAAiC;AAC/BxD,sBAAQyD,IAAR,CAAa,YAAb;AACD,aAFD,MAEO,IAAIF,WAAWA,QAAQG,QAAvB,EAAiC;AACtC1D,sBAAQyD,IAAR,CAAa,YAAb;AACD;AACD,gBAAME,SAAS3D,QAAQuC,MAAR,UAAsBvC,QAAQ4D,IAAR,CAAa,IAAb,CAAtB,UAA+C,EAA9D;AACA,mBAAKjD,MAAL,CAAYG,IAAZ,SAAuB,OAAKgC,SAAL,CAAef,IAAf,CAAvB,SAA+C4B,MAA/C;AACD,WAVD;AAWD,SAbD,MAaO;AACL,iBAAKhD,MAAL,CAAYG,IAAZ,CAAiB,mBAAjB;AACD;;AAED,YAAM+C,OAAO,CAAClB,OAAOC,WAAP,CAAmBC,GAAnB,KAA2BH,SAA5B,IAAyC,IAAtD;AACA,YAAMoB,eAAeC,KAAKC,KAAL,CAAWH,OAAO,GAAlB,IAAyB,GAA9C;AACA,eAAKlD,MAAL,CAAYG,IAAZ,kBAAgCgD,YAAhC;AACD,OAzCI,EA0CJG,KA1CI,CA0CE,UAAC9C,KAAD,EAAW;AAChB,YAAIA,KAAJ,EAAW;AACT,cAAM+C,YAAY/C,MAAMgD,WAAN,IAAqBhD,KAAvC;AACA,iBAAKR,MAAL,CAAYQ,KAAZ,CAAkB+C,UAAUE,KAAV,IAAmBF,SAArC;AACD;;AAED,eAAKvD,MAAL,CAAYQ,KAAZ,CAAkB,iDAAlB;;AAEA,YAAIkC,UAAUlB,QAAQC,OAAR,EAAd;;AAEAW,oBAAYI,OAAZ,CAAoB,UAACpB,IAAD,EAAU;AAC5BsB,oBAAUA,QAAQH,IAAR,CAAa,YAAM;AAC3B,mBAAO,OAAKI,oBAAL,CAA0BvB,IAA1B,EAAgCgB,WAAhC,EAA6CE,cAAclB,IAAd,CAA7C,CAAP;AACD,WAFS,CAAV;AAGD,SAJD;;AAMAsB,kBAAUA,QAAQH,IAAR,CAAa,YAAM;AAC3B,iBAAKvC,MAAL,CAAYG,IAAZ,CAAiB,gCAAjB;AACD,SAFS,CAAV;;AAIA,eAAOuC,OAAP;AACD,OA/DI,EAgEJY,KAhEI,CAgEE,UAAC9C,KAAD,EAAW;AAChB,YAAIA,KAAJ,EAAW;AACT,iBAAKR,MAAL,CAAYQ,KAAZ,CAAkBA,MAAMiD,KAAN,IAAejD,KAAjC;AACD;AACD,eAAKR,MAAL,CAAYQ,KAAZ,CAAkB,iDAAlB;AACD,OArEI,CAAP;AAsED;;AAED;;;;;;yCAGqBY,I,EAAMgB,W,EAAasB,M,EAAQ;AAAA;;AAC9C,UAAMd,UAAUc,SAASA,OAAOd,OAAhB,GAA0B,KAAKrD,MAAL,CAAYsB,GAAZ,CAAgBO,IAAhB,CAA1C;;AAEA,UAAMuC,SAASf,UAAUA,QAAQG,QAAlB,GAA6BhD,SAA5C;AACA,UAAM6D,SAAShB,UAAUA,QAAQC,QAAlB,GAA6B9C,SAA5C;;AAEA,UAAI8D,UAAU,EAAd;;AAEA,UAAID,MAAJ,EAAY;AACV,eAAOpC,QAAQC,OAAR,GACJc,IADI,CACC;AAAA,iBAAM,OAAKuB,aAAL,CAAmB1C,IAAnB,CAAN;AAAA,SADD,EAEJmB,IAFI,CAEC,YAAM;AACV,iBAAKvC,MAAL,CAAYK,KAAZ,qBAAoC,OAAK8B,SAAL,CAAef,IAAf,CAApC;AACA,iBAAOwC,OAAOxB,WAAP,CAAP;AACD,SALI,CAAP;AAMD;;AAED,aAAOZ,QAAQC,OAAR,GACJc,IADI,CACC,YAAM;AACV,YAAI,CAACoB,MAAL,EAAa;AACX,iBAAO5D,SAAP;AACD;AACD,eAAKC,MAAL,CAAYK,KAAZ,qBAAoC,OAAK8B,SAAL,CAAef,IAAf,CAApC;AACA,eAAOuC,OAAOvB,WAAP,CAAP;AACD,OAPI,EAQJG,IARI,CAQC,YAAM;AACVsB,kBAAU,OAAKE,iBAAL,CAAuB3C,IAAvB,CAAV;AACD,OAVI,EAWJmB,IAXI,CAWC;AAAA,eAAOmB,SAAS,OAAKM,mBAAL,CAAyBN,MAAzB,CAAT,GAA4C,OAAKO,YAAL,CAAkB7C,IAAlB,CAAnD;AAAA,OAXD,EAYJmB,IAZI,CAYC;AAAA,eAAM,OAAK2B,YAAL,CAAkB9C,IAAlB,CAAN;AAAA,OAZD,EAaJmB,IAbI,CAaC,YAAM;AACV,YAAM4B,UAAU,OAAKJ,iBAAL,CAAuB3C,IAAvB,CAAhB;AACA,eAAKgD,aAAL,CAAmBP,OAAnB,EAA4BM,OAA5B;AACD,OAhBI,CAAP;AAiBD;;AAED;;;;;;kCAGcN,O,EAASM,O,EAAS;AAAA;;AAC9B,UAAME,UAAUR,QAAQS,MAAR,CAAe;AAAA,eAAWH,QAAQI,OAAR,CAAgBC,OAAhB,MAA6B,CAAC,CAAzC;AAAA,OAAf,CAAhB;AACAH,cAAQ7B,OAAR,CAAgB;AAAA,eAAW,OAAKyB,YAAL,CAAkBO,OAAlB,CAAX;AAAA,OAAhB;AACD;;AAED;;;;;;;sCAIkBpD,I,EAAM;AACtB,UAAMqD,OAAO,KAAKlF,MAAL,CAAYmF,KAAZ,CAAkBtD,IAAlB,CAAb;;AAEA,UAAIqD,IAAJ,EAAU;AACR,eAAOA,KAAKE,IAAL,CAAUC,GAAV,CAAc,UAACC,OAAD,EAAa;AAChC,iBAAOJ,KAAKK,MAAL,CAAYD,OAAZ,CAAP;AACD,SAFM,CAAP;AAGD;;AAED,UAAME,eAAe,KAAKxF,MAAL,CAAY0B,OAAZ,CAAoB+D,aAApB,CAAkC5D,IAAlC,CAArB;;AAEA,UAAI2D,YAAJ,EAAkB;AAChB,eAAOA,aAAaE,YAAb,CACJL,GADI,CACA;AAAA,iBAAWM,SAASA,OAAO9D,IAAhB,GAAuB,KAAlC;AAAA,SADA,EAEJkD,MAFI,CAEG;AAAA,iBAAW,CAAC,CAACE,OAAb;AAAA,SAFH,CAAP;AAGD;;AAED,aAAO,EAAP;AACD;;AAED;;;;;;kCAGcpD,I,EAAM;AAAA;;AAClB,UAAM4D,gBAAgB,KAAKzF,MAAL,CAAY0B,OAAZ,CAAoB+D,aAA1C;;AAEA,UAAMD,eAAeC,cAAc5D,IAAd,CAArB;;AAEA2D,mBAAaE,YAAb,CACGzC,OADH,CACW,UAAC2C,eAAD,EAAkBC,KAAlB,EAA4B;AACnC,YAAI,CAACD,eAAL,EAAsB;AACpB;AACD;;AAED,YAAME,qBAAqBL,cAAcG,gBAAgB/D,IAA9B,CAA3B;;AAEA,YAAI,CAACiE,kBAAL,EAAyB;AACvB;AACD;;AAED,YAAIA,uBAAuBF,eAA3B,EAA4C;AAC1C,iBAAKnF,MAAL,CAAYK,KAAZ,wBAAuC,OAAK8B,SAAL,CAAegD,gBAAgB/D,IAA/B,CAAvC,oBAA0F,OAAKe,SAAL,CAAe4C,aAAa3D,IAA5B,CAA1F;;AAEA2D,uBAAaO,OAAb,CAAqBF,KAArB,EAA4BC,mBAAmBzC,OAA/C;;AAEA,cAAImC,aAAaE,YAAb,CAA0BG,KAA1B,MAAqCC,mBAAmBzC,OAA5D,EAAqE;AACnEmC,yBAAaE,YAAb,CAA0BG,KAA1B,IAAmCC,kBAAnC;AACD;;AAED,cAAME,YAAYF,mBAAmBG,SAAnB,CACfrE,IADe,CACV;AAAA,mBAAU+D,UAAUA,OAAO9D,IAAP,KAAgB2D,YAApC;AAAA,WADU,CAAlB;AAEA,cAAI,CAACQ,SAAL,EAAgB;AACdF,+BAAmBG,SAAnB,CAA6B1C,IAA7B,CAAkCiC,YAAlC;AACD;AACF;AACF,OA3BH;AA4BD;;AAED;;;;;;iCAGa3D,I,EAAM;AACjB,WAAKpB,MAAL,CAAYK,KAAZ,uBAAsC,KAAK8B,SAAL,CAAef,IAAf,CAAtC;AACA,aAAO,KAAK7B,MAAL,CAAYkG,MAAZ,CAAmBrE,IAAnB,CAAP;AACD;;AAED;;;;;;iCAGaA,I,EAAM;AAAA;;AACjB,UAAM2D,eAAe,KAAKxF,MAAL,CAAY0B,OAAZ,CAAoB+D,aAApB,CAAkC5D,IAAlC,CAArB;;AAEA,UAAI2D,YAAJ,EAAkB;AAChBA,qBAAaE,YAAb,CACGzC,OADH,CACW,UAAC2C,eAAD,EAAqB;AAC5B,cAAI,CAACA,eAAL,EAAsB;AACpB;AACD;AACDA,0BAAgBK,SAAhB,CACGhD,OADH,CACW,UAACkD,eAAD,EAAkBN,KAAlB,EAA4B;AACnC,gBAAIM,mBAAmBX,aAAa3D,IAAb,KAAsBsE,gBAAgBtE,IAA7D,EAAmE;AACjE,qBAAKpB,MAAL,CAAYK,KAAZ,wBAAuC,OAAK8B,SAAL,CAAeuD,gBAAgBtE,IAA/B,CAAvC,qBAA2F,OAAKe,SAAL,CAAegD,gBAAgB/D,IAA/B,CAA3F;AACA+D,8BAAgBK,SAAhB,CAA0BG,MAA1B,CAAiCP,KAAjC,EAAwC,CAAxC;AACD;AACF,WANH;AAOD,SAZH;AAaD;;AAED,WAAKpF,MAAL,CAAYK,KAAZ,sBAAqC,KAAK8B,SAAL,CAAef,IAAf,CAArC;AACA,WAAK7B,MAAL,CAAYqG,MAAZ,CAAmBxE,IAAnB;;AAEA,WAAKyE,oBAAL,CAA0BzE,IAA1B;AACD;;AAED;;;;;;;;yCAKqBA,I,EAAM;AACzB,UAAMyD,UAAU,KAAKiB,gBAAL,CAAsB1E,IAAtB,CAAhB;;AAEA;AACA2E,YAAMC,IAAN,CAAWC,SAASC,gBAAT,iBAAwCrB,OAAxC,QAAX,EACGrC,OADH,CACW;AAAA,eAAQ2D,KAAKC,MAAL,EAAR;AAAA,OADX;;AAGA;AACAL,YAAMC,IAAN,CAAWC,SAASC,gBAAT,CAA0B,qBAA1B,CAAX,EACG5B,MADH,CACU;AAAA,eAAQ6B,KAAKE,IAAL,KAAcxB,OAAtB;AAAA,OADV,EAEGrC,OAFH,CAEW;AAAA,eAAQ2D,KAAKC,MAAL,EAAR;AAAA,OAFX;AAGD;;AAED;;;;;;;;;qCAMiBhF,I,EAAM;AACrB,UAAMqD,OAAO,KAAKlF,MAAL,CAAYmF,KAAZ,CAAkBtD,IAAlB,CAAb;AACA,aAAOqD,OAAOA,KAAKI,OAAZ,GAAsBzD,KAAKS,OAAL,CAAa,MAAb,EAAqB,EAArB,CAA7B;AACD;;AAED;;;;;;oCAGgBT,I,EAAM;AACpB,UAAMwB,UAAU,KAAKrD,MAAL,CAAYsB,GAAZ,CAAgBO,IAAhB,CAAhB;AACA,UAAM8D,SAAS,KAAK3F,MAAL,CAAY0B,OAAZ,CAAoB+D,aAApB,CAAkC5D,IAAlC,CAAf;AACA,aAAO,EAAEA,UAAF,EAAQ8D,cAAR,EAAgBtC,gBAAhB,EAAP;AACD;;AAED;;;;;;wCAGoB0D,I,EAAM;AACxB,WAAK/G,MAAL,CAAYgH,GAAZ,CAAgBD,KAAKlF,IAArB,EAA2BkF,KAAK1D,OAAhC;AACA,WAAKrD,MAAL,CAAY0B,OAAZ,CAAoB+D,aAApB,CAAkCsB,KAAKlF,IAAvC,IAA+CkF,KAAKpB,MAApD;AACD;;AAED;;;;;;4CAGwB9D,I,EAAM8D,M,EAAQsB,K,EAAO;AAAA;;AAC3C,UAAIC,iBAAJ;AACA,UAAID,MAAMpF,IAAN,MAAgBrB,SAApB,EAA+B;AAC7B,eAAOyG,MAAMpF,IAAN,CAAP;AACD;AACD,UAAI,CAAC8D,MAAD,IAAW,CAACA,OAAOM,SAAP,CAAiB5D,MAAjC,EAAyC;AACvC6E,mBAAW,CAAX;AACD,OAFD,MAEO;AACLA,mBAAWvB,OAAOM,SAAP,CAAiBkB,MAAjB,CAAwB,UAACC,MAAD,EAASpB,SAAT,EAAuB;AACxD,cAAMqB,cAAc,IAAI,OAAKC,uBAAL,CAA6BtB,UAAUnE,IAAvC,EAA6CmE,SAA7C,EAAwDiB,KAAxD,CAAxB;AACA,iBAAOG,WAAW,IAAX,GAAkBC,WAAlB,GAAgCxD,KAAK0D,GAAL,CAASH,MAAT,EAAiBC,WAAjB,CAAvC;AACD,SAHU,EAGR,IAHQ,CAAX;AAID;AACDJ,YAAMpF,IAAN,IAAcqF,QAAd;AACA,aAAOA,QAAP;AACD;;AAED;;;;;;mCAGevF,O,EAASsF,K,EAAO;AAAA;;AAC7B,UAAItF,QAAQU,MAAR,KAAmB,CAAvB,EAA0B;AACxB,eAAOV,OAAP;AACD;;AAED,UAAM6F,UAAU,KAAKxH,MAAL,CAAY0B,OAAZ,CAAoB+D,aAApC;;AAEA,UAAI,CAACwB,KAAL,EAAY;AACVA,gBAAQ,EAAR;AACD;;AAED,UAAMQ,UAAU9F,QAAQwF,MAAR,CAAe,UAACC,MAAD,EAASvF,IAAT,EAAegE,KAAf,EAAyB;AACtD,YAAMF,SAAS6B,QAAQ3F,IAAR,IAAgB2F,QAAQ3F,IAAR,CAAhB,GAAgCrB,SAA/C;AACA,YAAM0G,WAAW,OAAKI,uBAAL,CAA6BzF,IAA7B,EAAmC8D,MAAnC,EAA2CsB,KAA3C,CAAjB;AACA,YAAMhB,YAAY,CAACN,MAAD,GAAU,EAAV,GAAeA,OAAOM,SAAP,CAAiBZ,GAAjB,CAAqB;AAAA,iBAAQqC,KAAK7F,IAAb;AAAA,SAArB,CAAjC;AACA,YAAMwC,SAASsB,UAAUA,OAAOtC,OAAjB,IAA4BsC,OAAOtC,OAAP,CAAeC,QAA1D;AACA,YAAMqE,OAAO,EAAET,kBAAF,EAAYrB,YAAZ,EAAmBhE,UAAnB,EAAyBoE,oBAAzB,EAAoC5B,cAApC,EAAb;AACA,YAAI+C,WAAW5G,SAAf,EAA0B;AACxB,iBAAOmH,IAAP;AACD;AACD,eAAOP,OAAOF,QAAP,IAAmBA,QAAnB,GAA8BE,MAA9B,GAAuCO,IAA9C;AACD,OAVe,EAUbnH,SAVa,CAAhB;;AAYA,UAAMoH,cAAcjG,QAAQkG,KAAR,CAAc,CAAd,CAApB;AACAD,kBAAYxB,MAAZ,CAAmBqB,QAAQ5B,KAA3B,EAAkC,CAAlC;AACA,UAAI,CAAC4B,QAAQpD,MAAb,EAAqB;AACnBoD,gBAAQxB,SAAR,CAAkBhD,OAAlB,CAA0B,UAACpB,IAAD,EAAU;AAClC,cAAI+F,YAAY5C,OAAZ,CAAoBnD,IAApB,MAA8B,CAAC,CAAnC,EAAsC;AACpC+F,wBAAYrE,IAAZ,CAAiB1B,IAAjB;AACD;AACF,SAJD;AAKD;;AAED,UAAMiG,aAAa,KAAKhF,cAAL,CAAoB8E,WAApB,EAAiCX,KAAjC,CAAnB;;AAEA,UAAMG,SAAS,CAACK,QAAQ5F,IAAT,EAAekG,MAAf,CAAsBD,UAAtB,CAAf;;AAEA,aAAOV,MAAP;AACD;;;;;;kBAnckBvH,iB","file":"SystemHotReloader.js","sourcesContent":["import 'core-js/shim';\n\nexport default class SystemHotReloader {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @prop  {Object} loader   SystemJS instance, default to SystemJS || System\n   * @prop  {Number} logLevel 0 - none, 1 - error, 2 - info (default), 3 - debug\n   */\n  constructor(options) {\n    const opts = options || {};\n\n    this.loader = opts.loader || SystemJS || System;\n\n    if (!this.loader) {\n      throw new Error('Unable to instantiate SystemJS Hot Reloader without SystemJS');\n    }\n\n    if (this.loader.hotReloaderOptions) {\n      Object.assign(opts, this.loader.hotReloaderOptions);\n    }\n\n    this.logLevel = opts.logLevel === undefined ? 2 : opts.logLevel;\n\n    this.logger = this.createLogger('HMR');\n\n    if (!this.loader.trace) {\n      this.logger.info('Set \"SystemJS.trace = true\" to be able to auto unload not used modules');\n    }\n  }\n\n  /**\n   * Create logger.\n   */\n  createLogger(prefix) {\n    return {\n      debug: (message) => {\n        if (this.logLevel >= 3 && console && console.debug) {\n          console.debug(`[${prefix}] ${message}`);\n        }\n      },\n      info: (message) => {\n        if (this.logLevel >= 2 && console && console.info) {\n          console.info(`[${prefix}] ${message}`);\n        }\n      },\n      error: (message) => {\n        if (this.logLevel >= 1 && console && console.warn) {\n          console.warn(`[${prefix}] ${message}`);\n        }\n      },\n    };\n  }\n\n  /**\n   * Resolve module file path to module name.\n   */\n  resolvePath(path) {\n    // try obvious resolve filename.ext => filename.ext\n    const name1 = this.loader.normalizeSync(path);\n    if (this.loader.get(name1)) {\n      return name1;\n    }\n\n    // try less obvious resolve filename.ext => filename.ext!\n    const name2 = this.loader.normalizeSync(`${path}!`);\n    if (this.loader.get(name2)) {\n      return name2;\n    }\n\n    // try to find by filename path in all registered modules, slow :-(\n    const name3 = Object.keys(this.loader._loader.modules).find((name) => {\n      return name.startsWith(`${name1}!`);\n    });\n    if (name3) {\n      return name3;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Reload module by file path.\n   */\n  reloadPath(path) {\n    this.logger.debug(`Reloading file: ${path}`);\n\n    const name = this.resolvePath(path);\n\n    if (name) {\n      return this.reloadModule(name);\n    }\n\n    // we did not find module :-(\n    this.logger.info('Nothing to update');\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clean full module name from useless base url prefix and loader related suffix.\n   */\n  cleanName(name) {\n    // remove base url prefix\n    if (name.startsWith(this.loader.baseURL)) {\n      name = `./${name.substr(this.loader.baseURL.length)}`;\n    }\n\n    // remove loader related garbage\n    return name.replace(/!.*$/, '');\n  }\n\n  /**\n   * Reload module by full module name.\n   */\n  reloadModule(moduleName) {\n    const startTime = window.performance.now();\n\n    this.logger.info(`Reloading module ${this.cleanName(moduleName)}`);\n\n    if (!this.loader.get(moduleName)) {\n      this.logger.info('Nothing to update');\n      return Promise.resolve();\n    }\n\n    const moduleChain = this.getReloadChain([moduleName]);\n    const moduleBackups = {};\n\n    return Promise.resolve()\n      .then(() => {\n        this.logger.debug('Reload chain:');\n        moduleChain.forEach((name) => {\n          this.logger.debug(` - ${this.cleanName(name)}`);\n        });\n      })\n      .then(() => {\n        this.logger.debug('Saving backup');\n        moduleChain.forEach((name) => {\n          moduleBackups[name] = this.getModuleBackup(name);\n        });\n      })\n      .then(() => {\n        let promise = Promise.resolve();\n        moduleChain.forEach((name) => {\n          promise = promise.then(() => this.reloadModuleInstance(name, moduleChain));\n        });\n        return promise;\n      })\n      .then(() => {\n        if (moduleChain.length) {\n          this.logger.info('Updated modules:');\n          moduleChain.forEach((name) => {\n            const exports = this.loader.get(name);\n            const options = [];\n            if (exports && exports.__reload) {\n              options.push('__reload()');\n            } else if (exports && exports.__unload) {\n              options.push('__unload()');\n            }\n            const suffix = options.length ? `{ ${options.join(', ')} }` : '';\n            this.logger.info(` - ${this.cleanName(name)} ${suffix}`);\n          });\n        } else {\n          this.logger.info('Nothing to update');\n        }\n\n        const time = (window.performance.now() - startTime) / 1000;\n        const timeSecRound = Math.floor(time * 100) / 100;\n        this.logger.info(`Reload took ${timeSecRound} sec`);\n      })\n      .catch((error) => {\n        if (error) {\n          const realError = error.originalErr || error;\n          this.logger.error(realError.stack || realError);\n        }\n\n        this.logger.error('An error occured during reloading. Reverting...');\n\n        let promise = Promise.resolve();\n\n        moduleChain.forEach((name) => {\n          promise = promise.then(() => {\n            return this.reloadModuleInstance(name, moduleChain, moduleBackups[name]);\n          });\n        });\n\n        promise = promise.then(() => {\n          this.logger.info('Application state was restored');\n        });\n\n        return promise;\n      })\n      .catch((error) => {\n        if (error) {\n          this.logger.error(error.stack || error);\n        }\n        this.logger.error('An unrecoverable error occured during reverting');\n      });\n  }\n\n  /**\n   * Reload module instance with option to reload from backup.\n   */\n  reloadModuleInstance(name, moduleChain, backup) {\n    const exports = backup ? backup.exports : this.loader.get(name);\n\n    const unload = exports ? exports.__unload : undefined;\n    const reload = exports ? exports.__reload : undefined;\n\n    let oldDeps = [];\n\n    if (reload) {\n      return Promise.resolve()\n        .then(() => this.fixModuleDeps(name))\n        .then(() => {\n          this.logger.debug(`Calling module ${this.cleanName(name)} __reload() hook`);\n          return reload(moduleChain);\n        });\n    }\n\n    return Promise.resolve()\n      .then(() => {\n        if (!unload) {\n          return undefined;\n        }\n        this.logger.debug(`Calling module ${this.cleanName(name)} unload() hook`);\n        return unload(moduleChain);\n      })\n      .then(() => {\n        oldDeps = this.getModuleDepNames(name);\n      })\n      .then(() => (backup ? this.restoreModuleBackup(backup) : this.deleteModule(name)))\n      .then(() => this.importModule(name))\n      .then(() => {\n        const newDeps = this.getModuleDepNames(name);\n        this.deleteOldDeps(oldDeps, newDeps);\n      });\n  }\n\n  /**\n   * Delete modules from oldDeps if they do not exist in newDeps.\n   */\n  deleteOldDeps(oldDeps, newDeps) {\n    const depDiff = oldDeps.filter(depName => newDeps.indexOf(depName) === -1);\n    depDiff.forEach(depName => this.deleteModule(depName));\n  }\n\n  /**\n   * Get normalized list of module dependency names based on trace information\n   * or based on module records.\n   */\n  getModuleDepNames(name) {\n    const load = this.loader.loads[name];\n\n    if (load) {\n      return load.deps.map((address) => {\n        return load.depMap[address];\n      });\n    }\n\n    const moduleRecord = this.loader._loader.moduleRecords[name];\n\n    if (moduleRecord) {\n      return moduleRecord.dependencies\n        .map(record => (record ? record.name : false))\n        .filter(depName => !!depName);\n    }\n\n    return [];\n  }\n\n  /**\n   * Fix module dependencies before hooked reload.\n   */\n  fixModuleDeps(name) {\n    const moduleRecords = this.loader._loader.moduleRecords;\n\n    const moduleRecord = moduleRecords[name];\n\n    moduleRecord.dependencies\n      .forEach((depModuleRecord, index) => {\n        if (!depModuleRecord) {\n          return;\n        }\n\n        const newDepModuleRecord = moduleRecords[depModuleRecord.name];\n\n        if (!newDepModuleRecord) {\n          return;\n        }\n\n        if (newDepModuleRecord !== depModuleRecord) {\n          this.logger.debug(`Fixing dependency ${this.cleanName(depModuleRecord.name)} for module ${this.cleanName(moduleRecord.name)}`);\n\n          moduleRecord.setters[index](newDepModuleRecord.exports);\n\n          if (moduleRecord.dependencies[index] !== newDepModuleRecord.exports) {\n            moduleRecord.dependencies[index] = newDepModuleRecord;\n          }\n\n          const impRecord = newDepModuleRecord.importers\n            .find(record => record && record.name === moduleRecord);\n          if (!impRecord) {\n            newDepModuleRecord.importers.push(moduleRecord);\n          }\n        }\n      });\n  }\n\n  /**\n   * Import module.\n   */\n  importModule(name) {\n    this.logger.debug(`Importing module ${this.cleanName(name)}`);\n    return this.loader.import(name);\n  }\n\n  /**\n   * Delete module and fix importers for dependencies.\n   */\n  deleteModule(name) {\n    const moduleRecord = this.loader._loader.moduleRecords[name];\n\n    if (moduleRecord) {\n      moduleRecord.dependencies\n        .forEach((depModuleRecord) => {\n          if (!depModuleRecord) {\n            return;\n          }\n          depModuleRecord.importers\n            .forEach((impModuleRecord, index) => {\n              if (impModuleRecord && moduleRecord.name === impModuleRecord.name) {\n                this.logger.debug(`Removing importer ${this.cleanName(impModuleRecord.name)} from module ${this.cleanName(depModuleRecord.name)}`);\n                depModuleRecord.importers.splice(index, 1);\n              }\n            });\n        });\n    }\n\n    this.logger.debug(`Removing module ${this.cleanName(name)}`);\n    this.loader.delete(name);\n\n    this.clearModuleResources(name);\n  }\n\n  /**\n   * Clear module resources located in DOM.\n   *\n   * Usefull for CSS/LESS/SASS/SCSS/Stylus plugins who keep CSS as style or link tags.\n   */\n  clearModuleResources(name) {\n    const address = this.getModuleAddress(name);\n\n    // for example, plugin-sass\n    Array.from(document.querySelectorAll(`[data-url=\"${address}\"]`))\n      .forEach(node => node.remove());\n\n    // for example, plugin-css\n    Array.from(document.querySelectorAll('[data-systemjs-css]'))\n      .filter(node => node.href === address)\n      .forEach(node => node.remove());\n  }\n\n  /**\n   * Get module address by name.\n   *\n   * Try to use trace information if availabe, if not then try to guess it.\n   * Address guessing should work well for plugins without custom translation hook.\n   */\n  getModuleAddress(name) {\n    const load = this.loader.loads[name];\n    return load ? load.address : name.replace(/!.*$/, '');\n  }\n\n  /**\n   * Get module backup which could be used to restore module state.\n   */\n  getModuleBackup(name) {\n    const exports = this.loader.get(name);\n    const record = this.loader._loader.moduleRecords[name];\n    return { name, record, exports };\n  }\n\n  /**\n   * Restore module from backup.\n   */\n  restoreModuleBackup(data) {\n    this.loader.set(data.name, data.exports);\n    this.loader._loader.moduleRecords[data.name] = data.record;\n  }\n\n  /**\n   * Get shortest distance to the root module (root modules have no importers).\n   */\n  getModuleDistanceToRoot(name, record, cache) {\n    let distance;\n    if (cache[name] !== undefined) {\n      return cache[name];\n    }\n    if (!record || !record.importers.length) {\n      distance = 0;\n    } else {\n      distance = record.importers.reduce((result, impRecord) => {\n        const impDistance = 1 + this.getModuleDistanceToRoot(impRecord.name, impRecord, cache);\n        return result === null ? impDistance : Math.min(result, impDistance);\n      }, null);\n    }\n    cache[name] = distance;\n    return distance;\n  }\n\n  /**\n   * Reduce dependency tree and return modules in the order they should be reloaded.\n   */\n  getReloadChain(modules, cache) {\n    if (modules.length === 0) {\n      return modules;\n    }\n\n    const records = this.loader._loader.moduleRecords;\n\n    if (!cache) {\n      cache = {};\n    }\n\n    const farNode = modules.reduce((result, name, index) => {\n      const record = records[name] ? records[name] : undefined;\n      const distance = this.getModuleDistanceToRoot(name, record, cache);\n      const importers = !record ? [] : record.importers.map(item => item.name);\n      const reload = record && record.exports && record.exports.__reload;\n      const meta = { distance, index, name, importers, reload };\n      if (result === undefined) {\n        return meta;\n      }\n      return result.distance >= distance ? result : meta;\n    }, undefined);\n\n    const nextModules = modules.slice(0);\n    nextModules.splice(farNode.index, 1);\n    if (!farNode.reload) {\n      farNode.importers.forEach((name) => {\n        if (nextModules.indexOf(name) === -1) {\n          nextModules.push(name);\n        }\n      });\n    }\n\n    const nextResult = this.getReloadChain(nextModules, cache);\n\n    const result = [farNode.name].concat(nextResult);\n\n    return result;\n  }\n}\n"]}